Первым появляется экран на котором два варианта входа в ЛК:
 - Вход для админа
 - Вход для юзера

При нажатии на "Вход для админа" появляется AdminFlow
При нажатии на "Вход для юзера" появляется UserFlow



AdminFlow ____________________

Views: списки для Users, Cars, Rides, Analytics
Actions: CRUD для всех списков



UserFlow ____________________

Views: списки для Cars, Rides, Личная информация 
Actions: 
 - Cars: просмотр доступных машин, нажатии в списке на машину, бронь машины (добавляется поездка после нажатии на кнопку "Забронировать")
 - Rides: просмотр своих поездок если они есть, данные по типу стоимость, длительность добавляются рандомно
 - Личная информация: Пол, Рейтинг и тд





Структура кода:

Для каждой таблицы созданы модели (структуры) User, Car, Ride
Нужно спарсить каждую таблиц, для этого нужно три файла UserViewController, CarViewController, RideViewController. По сути, мы просто идём по ссылке и оттуда парсим данные, чтобы не нагромождать повтор кода, создадим один класс, который будет работать с API и парсить данные по разным URL, для этого надо будет сделать "конструктор" URL чтобы ходить по разным ссылкам и парсить таблицы.

После того как всё спарсим, нужно сделать MainView, UserFlowView, AdminFlowView.

MainView: 
 - Login as Admin Button
 - Login as User Button

*
Так как поле email мы не делаем, при нажатии на кнопку Login as User мы будем брать рандомного юзера из таблицы Users и заходить в ЛК под его id
*


UserFlowView:
 - Lists: Cars, Rides, Account Info 
Make it like bottom tab bar 

AdminFLowView:
 - Lists: Users, Cars, Rides, Analytics 
Make it like bottom tab bar



